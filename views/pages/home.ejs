<%- include("../partials/header") %>

<body>
  <%- include("../partials/navBar") %>
  
  <div class="container py-5">
    <h1 class="mb-5 text-center">Catálogo de Produtos</h1>

    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-5">
      <% produtos.forEach(produto => { %>
        <div class="col">
          <div class="card h-100 shadow-sm">
            <div class="image-container">
              <img src="<%= produto.imagemUrl || '/images/produto_padrao.jpg' %>" alt="<%= produto.nome %>">
          </div>
          <div class="card-body d-flex flex-column pt-0"> <h3 class="card-title"><%= produto.nome %></h3>
              <p class="card-text text-muted"><%= produto.descricao %></p>
              
              <hr class="my-3">

              <div class="card-footer bg-transparent border-0 mt-auto pt-0">
                <button class="btn btn-outline-primary w-100" data-bs-toggle="modal" data-bs-target="#modal_<%= produto.id %>">
                  <i class="bi bi-eye me-2"></i>Ler mais
                </button>
              </div>
            </div>
          </div>
        </div>
      <% }) %> 
    </div>
  </div>

  <% produtos.forEach(produto => { %>
    <div class="modal fade" id="modal_<%= produto.id %>" tabindex="-1" aria-labelledby="modalLabel_<%= produto.id %>" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
          <form action="/p/<%= produto.id %>" method="POST">
            <div class="modal-header">
              <h5 class="modal-title" id="modalLabel_<%= produto.id %>"><%= produto.nome %></h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <p><strong>Descrição Detalhada:</strong> <%= produto.descricao %></p>
              <p><strong>Categoria:</strong> <%= produto.categoria %></p>
              
              <hr>

              <div class="mt-4">
                <h5>Avalie este produto:</h5>
                <div class="star-rating" data-product-id="<%= produto.id %>" data-existing-rating="<%= produto.minhaAvaliacao %>">
                  <i class="bi bi-star" data-value="1"></i>
                  <i class="bi bi-star" data-value="2"></i>
                  <i class="bi bi-star" data-value="3"></i>
                  <i class="bi bi-star" data-value="4"></i>
                  <i class="bi bi-star" data-value="5"></i>
                </div>
                <input type="hidden" name="rating" id="rating-<%= produto.id %>" value="<%= produto.minhaAvaliacao %>">
              </div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
              <button type="submit" class="btn btn-primary">Enviar Avaliação</button>
            </div>
          </form>
        </div>
      </div>
    </div>
  <% }) %>

  <%- include("../partials/footer") %>
  
  <script src="/bootstrap-5.0.2-dist/js/bootstrap.bundle.min.js"></script>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
    const allStarRatings = document.querySelectorAll('.star-rating');

    function setStarState(container, rating) {
      const stars = container.querySelectorAll('i');
      const productId = container.dataset.productId;
      const ratingInput = document.getElementById(`rating-${productId}`);

      if (ratingInput) {
        ratingInput.value = rating;
      }

      stars.forEach(star => {
        const starValue = parseInt(star.dataset.value);
        if (starValue <= rating) {
          star.classList.remove('bi-star');
          star.classList.add('bi-star-fill');
        } else {
          star.classList.remove('bi-star-fill');
          star.classList.add('bi-star');
        }
        // Remove a classe 'rated' ao interagir para permitir a nova seleção
        star.classList.remove('rated');
      });

      // Adiciona a classe 'rated' às estrelas que correspondem à avaliação atual
      for (let i = 0; i < rating; i++) {
        stars.item(i).classList.add('rated');
      }
    }

    allStarRatings.forEach(starContainer => {
      const existingRating = parseInt(starContainer.dataset.existingRating) || 0;

      // Inicializa o estado das estrelas com a avaliação existente
      if (existingRating > 0) {
        setStarState(starContainer, existingRating);
      }

      starContainer.querySelectorAll('i').forEach(star => {
        star.addEventListener('click', function() {
          const newRating = parseInt(this.dataset.value);
          setStarState(starContainer, newRating);
        });
      });
    });
  });
  </script>
</body>
</html>